cmake_minimum_required(VERSION 2.8)

# add prefix to every string in a variable
FUNCTION(PREPEND var prefix)
   SET(listVar "")
   FOREACH(f ${ARGN})
      LIST(APPEND listVar "${prefix}/${f}")
   ENDFOREACH(f)
   SET(${var} "${listVar}" PARENT_SCOPE)
ENDFUNCTION(PREPEND)

FUNCTION(PREPEND_CPP var prefix)
   SET(listVar "")
   FOREACH(f ${ARGN})
      LIST(APPEND listVar "${prefix}/${f}.cpp")
   ENDFOREACH(f)
   SET(${var} "${listVar}" PARENT_SCOPE)
ENDFUNCTION(PREPEND_CPP)

FUNCTION(PREPEND_H var prefix)
   SET(listVar "")
   FOREACH(f ${ARGN})
      LIST(APPEND listVar "${prefix}/${f}.h")
   ENDFOREACH(f)
   SET(${var} "${listVar}" PARENT_SCOPE)
ENDFUNCTION(PREPEND_H)

project(CMakeDemo_by_PY)


if(UNIX)
	set(CMAKE_C_COMPILER "/usr/bin/gcc")
	set(CMAKE_CXX_COMPILER "/usr/bin/g++")
#	set(CMAKE_C_COMPILER "/usr/bin/clang")
#	set(CMAKE_CXX_COMPILER "/usr/bin/clang++")
endif(UNIX)


# set compile options
if(UNIX)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
endif(UNIX)

# set binary and library folders
set(EXECUTABLE_OUTPUT_PATH bin)
set(LIBRARY_OUTPUT_PATH lib)

# set include and lib folders
if(UNIX)
include_directories("/usr/xenomai/include")
include_directories("/opt/etherlab/include")
include_directories("/usr/lapack/include")
include_directories("/usr/Aris/include")
include_directories("/usr/Robots/include")
link_directories(/usr/lapack/lib)
link_directories(/usr/Aris/lib)
link_directories(/usr/Robots/lib)
endif(UNIX)
if(WIN32)
include_directories("C:/lapack/include")
include_directories("C:/Aris/include")
include_directories("C:/Robots/include")
link_directories(C:/lapack/lib)
link_directories(C:/Aris/lib)
link_directories(C:/Robots/lib)
endif(WIN32)


# set link files
if(WIN32)
set(SYSTEM_LINK_LIBS ws2_32)
set(LAPACK_LINK_LIBS liblapacke liblapack cblas libblas)
set(ARIS_LINK_LIBS Aris_Plan Aris_DynKer Aris_ExpCal Aris_Core)
set(ROBOTS_LINK_LIBS Robot_Base HexapodIII)
endif(WIN32)
if(UNIX)
set(SYSTEM_LINK_LIBS pthread gfortran)
set(LAPACK_LINK_LIBS lapacke lapack cblas refblas)
set(ARIS_LINK_LIBS Aris_Plan Aris_DynKer Aris_ExpCal Aris_Core)
set(ROBOTS_LINK_LIBS Robot_Base HexapodIII)
endif(UNIX)

################################### build server ####################################

set(SOURCE_FILES main.cpp robot_interface.h robot_interface.cpp)
PREPEND(FULL_SRC Server ${SOURCE_FILES})
add_executable(Server ${FULL_SRC})
target_link_libraries(Server ${ROBOTS_LINK_LIBS} ${ARIS_LINK_LIBS} ${LAPACK_LINK_LIBS} ${SYSTEM_LINK_LIBS})

################################### build client ####################################

set(SOURCE_FILES mv_forward.cpp)
PREPEND(FULL_SRC Client ${SOURCE_FILES})
add_executable(mv_forward ${FULL_SRC})
target_link_libraries(mv_forward ${ROBOTS_LINK_LIBS} ${ARIS_LINK_LIBS} ${LAPACK_LINK_LIBS} ${SYSTEM_LINK_LIBS})

set(SOURCE_FILES home1.cpp)
PREPEND(FULL_SRC Client ${SOURCE_FILES})
add_executable(home1 ${FULL_SRC})
target_link_libraries(home1 ${ROBOTS_LINK_LIBS} ${ARIS_LINK_LIBS} ${LAPACK_LINK_LIBS} ${SYSTEM_LINK_LIBS})
















